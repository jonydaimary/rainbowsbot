const { Client, RichEmbed } = require('discord.js');
const { stripIndents } = require('common-tags');
const schedule = require('node-schedule');

const handleCommand = require('./command-processing/handle-command');
const loadCommands = require('./command-processing/load-commands');

const config = require('./../config');

const client = new Client();
client.authState = true;

client.commands = loadCommands(__dirname + '/commands');
client.on('message', handleCommand);

client.once('ready', async () => {
    client.sequelize = await require('./dbinit')();
});

client.on('message', async message => {
    if (message.author.bot
        || message.channel.type == 'dm'
        || !config.xpChannels.includes(message.channel.id))
        return;
    const random = require('./utils/random');
    const Users = client.sequelize.model('users');
    const data = await Users.xp(message.author.id, random(1, 5), true);
    if (data.levelUp)
        client.emit('memberLevelUp', message, data);
});

client.on('memberLevelUp', (message, { level }) => {
    message.channel.send(`–ü–æ–∑–¥—Ä–∞–≤–ª—è—é ${message.author}, —Ç—ã –ø–æ–ª—É—á–∏–ª **${level}** —É—Ä–æ–≤–µ–Ω—å!`);
});

client.on('memberLevelUp', (message, { level }) => {
    const roles = config.levelRoles.filter(([l]) => l == level).map(([, role]) => role);
    roles.forEach(role => message.member.addRole(role));
});

client.on('ready', () => {
    console.log('Client ready.');
    const setActivity = status => client.user.setActivity(status, {
        type: 'STREAMING',
        url: 'https://twitch.tv/romanvoyoutube'
    }).catch(console.error);
    let index = 0;
    const setStatus = () => {
        const status = [
            `${config.prefix}help`,
            'Rainbow`s Server',
            `${client.users.array().length} users`
        ][index];
        index = index == 2 ? 0 : index + 1;
        setActivity(status);
    };
    setStatus();
    setInterval(() => setStatus(), 180000);
});

client.on('guildCreate', guild => console.log(`Guild joind: ${guild.name}(${guild.id})[${guild.memberCount}]`));

client.on('guildDelete', guild => console.log(`Guild left: ${guild.name}(${guild.id})`));

client.on('guildMemberAuthorized', async member => {
    const owner = await client.fetchUser(config.owner);
    const embed = new RichEmbed()
        .setAuthor(owner.tag, owner.avatarURL)
        .setTitle(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ ${member.guild.name}!`)
        .setDescription(`–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–∏—à—É –≤–∞–º —è, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ \`${config.prefix}help\``)
        .addField('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ', stripIndents`
            Rainbow's Server ‚Äî —ç—Ç–æ —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–π—Å—è —Å–µ—Ä–≤–µ—Ä Discord. –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π —Å–µ—Ä–≤–µ—Ä–∞ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ. –ó–¥–µ—Å—å –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏ —É –æ–ø—ã—Ç–Ω—ã—Ö –∏ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤.
            –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π <#${config.channels.rules}>.
            **–ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã –∑–∞—à–µ–ª –∫ –Ω–∞–º**
            –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Å—è –∫ –ì–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
            
            –ß–µ–ª–æ–≤–µ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **${member.guild.memberCount}**
        `)
        .setColor(config.embed.color.direct)
        .setFooter('Rainbow`s server üåà Welcome!');

    member.send(embed);
});

client.on('guildMemberAdd', member => {
    const embed = new RichEmbed()
        .setTitle('–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞')
        .setDescription(`–ö —Å–µ—Ä–≤–µ—Ä—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è ${member.user.tag}`)
        .setColor(config.embed.color.guild)
        .setFooter('Rainbow\'s server üåà Welcome!');

    client.channels.get(config.channels.general).send(embed);
    client.channels.get(config.channels.staffchat).send({ embed });
});

client.on('guildMemberRemove', member => {
    const embed = new RichEmbed()
        .setTitle('–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä')
        .setDescription(`–° —Å–µ—Ä–≤–µ—Ä–∞ —É—à–µ–ª ${member.user.tag}`)
        .setColor(config.embed.color.guild)
        .setFooter('Rainbow\'s server üåà Goodbye!');

    client.channels.get(config.channels.staffchat).send(embed);
});

client.on('guildMemberAdd', async member => {
    if (!client.authState) {
        client.emit('guildMemberAuthorized', member);
        return;
    }

    const generateMathProblem = require('./utils/generate-math-problem');

    member.addRole(config.roles.unauthorized);

    const dm = await member.createDM();

    let problem = generateMathProblem();
    dm.send(stripIndents`
        –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ä–µ—à–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–µ –≤—ã—Ä–∞–∂–µ–Ω–∏e:
        \`${problem.expression} = ?\`
        **–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:** !–æ—Ç–≤–µ—Ç
        **–ü—Ä–∏–º–µ—Ä:**
        \`2 + 2 = ?\`
        !4
        –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    `);

    const collector = dm.createMessageCollector(msg => msg.content.startsWith('!'));
    collector.on('collect', message => {
        const answer = message.content.substring(1);
        if (answer == problem.answer) {
            dm.send('–í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!');
            member.removeRole(config.roles.unauthorized);
            member.addRole(config.roles.novice);
            collector.stop();
            client.emit('guildMemberAuthorized', member);
        } else {
            problem = generateMathProblem();
            dm.send(`–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ù–æ–≤–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: \`${problem.expression} = ?\``);
        }
    });
});

client.on('guildMemberUpdate', async (before, after) => {
    const matchingRole = '469612245744091181';
    const achievment = '470625504035078154';

    if (!before.roles.has(matchingRole) && after.roles.has(matchingRole))
        await after.addRole(achievment);
});

client.on('guildMemberUpdate', async (before, after) => {
    const colorRoles = [
        '470625212111650817',
        '470625105521934357',
        '470625422141292554',
        '470625297885298709',
        '470625938485542933',
        '470626317747093524',
        '470626430687117322',
        '470626794521886721',
        '470626943168151553',
        '470627037384540183',
        '470627142464569355',
        '470627245464223745',
        '470627342323023894',
        '470627475416809472',
        '470627587622830092'
    ];
    const achievment = '510493493936914449';

    if (!colorRoles.every(id => before.roles.has(id)) && colorRoles.every(id => after.roles.has(id)))
        await after.addRole(achievment);
});

schedule.scheduleJob(config.authorization.from, () => {
    client.authState = true;
    client.channels.get(config.channels.staffchat)
        .send('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.');
});

schedule.scheduleJob(config.authorization.to, () => {
    client.authState = false;
    client.channels.get(config.channels.staffchat)
        .send('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.');
});

schedule.scheduleJob(config.warnExpirationDate, () => {
    client.sequelize.model('warns').clear();
});

client.login(process.env.TOKEN);